{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\OneDrive\\\\Desktop\\\\Smart_Expense_Tracker\\\\client\\\\src\\\\components\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../api.ts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [month, setMonth] = useState(new Date().toISOString().slice(0, 7));\n  const [spent, setSpent] = useState(0);\n  const [budget, setBudget] = useState(\"\");\n  useEffect(() => {\n    // Fetch monthly spend and budget on month change\n    API.get(\"/expenses/monthly\", {\n      params: {\n        month\n      }\n    }).then(r => setSpent(r.data.total)).catch(() => setSpent(0));\n    API.get(\"/budget\", {\n      params: {\n        month\n      }\n    }).then(r => {\n      var _r$data, _r$data$limit;\n      return setBudget(((_r$data = r.data) === null || _r$data === void 0 ? void 0 : (_r$data$limit = _r$data.limit) === null || _r$data$limit === void 0 ? void 0 : _r$data$limit.toString()) || \"\");\n    }).catch(() => setBudget(\"\"));\n  }, [month]);\n  const saveBudget = () => {\n    if (!budget || isNaN(parseFloat(budget))) return alert(\"Invalid budget\");\n    API.post(\"/budget\", {\n      month,\n      limit: parseFloat(budget)\n    }).then(() => alert(\"Budget saved\")).catch(() => alert(\"Failed to save budget\"));\n  };\n  const percent = budget ? Math.min(spent / parseFloat(budget) * 100, 100) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"month\",\n      className: \"input\",\n      value: month,\n      onChange: e => setMonth(e.target.value),\n      style: {\n        maxWidth: \"200px\",\n        marginBottom: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Spent: \\u20B9\", spent.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"number\",\n        value: budget,\n        placeholder: \"Budget\",\n        onChange: e => setBudget(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: saveBudget,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progress-fill ${percent < 100 ? \"green\" : \"red\"}`,\n        style: {\n          width: `${percent}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [percent.toFixed(1), \"% of budget used\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"7vJv04wbUR5hfqmeSZ4O3Q5Cw6s=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","API","jsxDEV","_jsxDEV","Dashboard","_s","month","setMonth","Date","toISOString","slice","spent","setSpent","budget","setBudget","get","params","then","r","data","total","catch","_r$data","_r$data$limit","limit","toString","saveBudget","isNaN","parseFloat","alert","post","percent","Math","min","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","style","maxWidth","marginBottom","toFixed","placeholder","onClick","width","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/OneDrive/Desktop/Smart_Expense_Tracker/client/src/components/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport API from \"../api.ts\";\r\n\r\nexport default function Dashboard() {\r\n  const [month, setMonth] = useState(new Date().toISOString().slice(0, 7));\r\n  const [spent, setSpent] = useState(0);\r\n  const [budget, setBudget] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Fetch monthly spend and budget on month change\r\n    API.get(\"/expenses/monthly\", { params: { month } })\r\n      .then(r => setSpent(r.data.total))\r\n      .catch(() => setSpent(0));\r\n\r\n    API.get(\"/budget\", { params: { month } })\r\n      .then(r => setBudget(r.data?.limit?.toString() || \"\"))\r\n      .catch(() => setBudget(\"\"));\r\n  }, [month]);\r\n\r\n  const saveBudget = () => {\r\n    if (!budget || isNaN(parseFloat(budget))) return alert(\"Invalid budget\");\r\n    API.post(\"/budget\", { month, limit: parseFloat(budget) })\r\n      .then(() => alert(\"Budget saved\"))\r\n      .catch(() => alert(\"Failed to save budget\"));\r\n  };\r\n\r\n  const percent = budget ? Math.min((spent / parseFloat(budget)) * 100, 100) : 0;\r\n\r\n  return (\r\n    <div className=\"box\">\r\n      <h3>Dashboard</h3>\r\n\r\n      {/* Month Selector */}\r\n      <input\r\n        type=\"month\"\r\n        className=\"input\"\r\n        value={month}\r\n        onChange={e => setMonth(e.target.value)}\r\n        style={{ maxWidth: \"200px\", marginBottom: \"10px\" }}\r\n      />\r\n\r\n      <p>Spent: â‚¹{spent.toFixed(2)}</p>\r\n\r\n      <div className=\"flex-row\">\r\n        <input\r\n          className=\"input\"\r\n          type=\"number\"\r\n          value={budget}\r\n          placeholder=\"Budget\"\r\n          onChange={e => setBudget(e.target.value)}\r\n        />\r\n        <button className=\"btn\" onClick={saveBudget}>Save</button>\r\n      </div>\r\n\r\n      <div className=\"progress-bar\">\r\n        <div\r\n          className={`progress-fill ${percent < 100 ? \"green\" : \"red\"}`}\r\n          style={{ width: `${percent}%` }}\r\n        ></div>\r\n      </div>\r\n\r\n      <p>{percent.toFixed(1)}% of budget used</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}