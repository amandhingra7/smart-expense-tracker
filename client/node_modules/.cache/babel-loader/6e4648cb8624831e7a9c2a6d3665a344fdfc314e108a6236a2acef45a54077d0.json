{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\OneDrive\\\\Desktop\\\\Smart_Expense_Tracker\\\\client\\\\src\\\\components\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../api.ts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const month = new Date().toISOString().slice(0, 7);\n  const [spent, setSpent] = useState(0);\n  const [budget, setBudget] = useState(\"\");\n  useEffect(() => {\n    API.get(\"/expenses/monthly\", {\n      params: {\n        month\n      }\n    }).then(r => setSpent(r.data.total));\n    API.get(\"/budget\", {\n      params: {\n        month\n      }\n    }).then(r => {\n      var _r$data, _r$data$limit;\n      return setBudget(((_r$data = r.data) === null || _r$data === void 0 ? void 0 : (_r$data$limit = _r$data.limit) === null || _r$data$limit === void 0 ? void 0 : _r$data$limit.toString()) || \"\");\n    });\n  }, [month]);\n  const saveBudget = () => {\n    API.post(\"/budget\", {\n      month,\n      limit: parseFloat(budget)\n    }).then(() => alert(\"Budget saved\"));\n  };\n  const percent = budget ? Math.min(spent / parseFloat(budget) * 100, 100) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Spent: \\u20B9\", spent.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: budget,\n          onChange: e => setBudget(e.target.value),\n          placeholder: \"Monthly Budget\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveBudget,\n          style: {\n            width: \"auto\"\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-fill\",\n        style: {\n          width: `${percent}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"okDFRnbM3JuVyJDTPFVfWcNr2iI=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","API","jsxDEV","_jsxDEV","Dashboard","_s","month","Date","toISOString","slice","spent","setSpent","budget","setBudget","get","params","then","r","data","total","_r$data","_r$data$limit","limit","toString","saveBudget","post","parseFloat","alert","percent","Math","min","className","children","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","style","width","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/OneDrive/Desktop/Smart_Expense_Tracker/client/src/components/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport API from \"../api.ts\";\r\n\r\nexport default function Dashboard() {\r\n  const month = new Date().toISOString().slice(0,7);\r\n  const [spent, setSpent] = useState(0);\r\n  const [budget, setBudget] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    API.get(\"/expenses/monthly\", { params:{month} }).then(r => setSpent(r.data.total));\r\n    API.get(\"/budget\", { params:{month} }).then(r => setBudget(r.data?.limit?.toString() || \"\"));\r\n  }, [month]);\r\n\r\n  const saveBudget = () => {\r\n    API.post(\"/budget\", { month, limit: parseFloat(budget) }).then(() => alert(\"Budget saved\"));\r\n  };\r\n\r\n  const percent = budget ? Math.min((spent/parseFloat(budget))*100,100) : 0;\r\n\r\n  return (\r\n    <div className=\"dashboard-box\">\r\n      <div className=\"header\">\r\n        <strong>Spent: â‚¹{spent.toFixed(2)}</strong>\r\n        <div>\r\n          <input type=\"number\" value={budget}\r\n                 onChange={e => setBudget(e.target.value)} placeholder=\"Monthly Budget\" />\r\n          &nbsp;\r\n          <button onClick={saveBudget} style={{width:\"auto\"}}>Save</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"progress-bar\">\r\n        <div className=\"progress-fill\" style={{ width:`${percent}%` }} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}